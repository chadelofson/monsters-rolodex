{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","console","log","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAAe,I,wBCcAA,EAbK,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAQG,GAAlC,0BACHC,IAAI,YAEN,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,YCIHC,EAVS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,OACE,qBAAKP,UAAU,YAAf,SACGO,EAASC,KAAI,SAACT,GAAD,OACZ,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,UCIZO,G,MARG,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OAChB,uBACEC,KAAK,SACLZ,UAAU,SACVU,YAAaA,EACbG,SAAUF,MCsCCG,E,kDAtCb,aAAe,IAAD,8BACZ,gBAcFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,QAAS,kBAAMC,QAAQC,IAAI,EAAKC,WAbtE,EAAKA,MAAQ,CACXf,SAAU,GACVU,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBM,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKX,SAAS,CAAET,SAAUoB,S,oBAO/C,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bf,EADD,EACCA,SAAUU,EADX,EACWA,YACZY,EAAmBtB,EAASuB,QAAO,SAAA/B,GACvC,OAAOA,EAAQK,KAAK2B,cAAcC,SAASf,EAAYc,kBAGzD,OACE,sBAAK/B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEU,YAAY,kBACZC,aAAciB,KAAKjB,eAErB,cAAC,EAAD,CAAUJ,SAAUsB,W,GAjCVI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.01718b83.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import './card.styles.css';\nexport const Card = ({ monster }) => {\n  return (\n    <div className='card-container'>\n      <img\n        src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}\n        alt='Monster'\n      />\n      <h1>{monster.name}</h1>\n      <p>{monster.email}</p>\n    </div>\n  );\n};\n\nexport default Card;\n","import './card-list.styles.css';\n\nimport Card from '../card/card.component';\nexport const CardList = ({ monsters }) => {\n  return (\n    <div className='card-list'>\n      {monsters.map((monster) => (\n        <Card key={monster.id} monster={monster} />\n      ))}\n    </div>\n  );\n};\n\nexport default CardList;\n","\nimport './search-box.styles.css';\n\nconst SearchBox = ({ placeholder, handleChange }) => (\n  <input\n    type=\"search\"\n    className=\"search\"\n    placeholder={placeholder}\n    onChange={handleChange} />\n)\n\nexport default SearchBox","import { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component'\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  handleChange = e => {\n    this.setState({ searchField: e.target.value }, () => console.log(this.state))\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => {\n      return monster.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n\n    return (\n      <div className='App'>\n        <h1>Monsters Rolodex</h1>\n        <SearchBox \n          placeholder=\"search monsters\"\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}